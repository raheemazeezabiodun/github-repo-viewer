[{"/Users/azeezraheem/Documents/workspace/projects/github-repo-viewer/src/components/RepoList/list.tsx":"1","/Users/azeezraheem/Documents/workspace/projects/github-repo-viewer/src/components/RepoList/index.tsx":"2","/Users/azeezraheem/Documents/workspace/projects/github-repo-viewer/src/services/config.ts":"3"},{"size":371,"mtime":1610366296606,"results":"4","hashOfConfig":"5"},{"size":2793,"mtime":1610369646380,"results":"6","hashOfConfig":"5"},{"size":193,"mtime":1610369123341,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"909zjd",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/azeezraheem/Documents/workspace/projects/github-repo-viewer/src/components/RepoList/list.tsx",[],"/Users/azeezraheem/Documents/workspace/projects/github-repo-viewer/src/components/RepoList/index.tsx",["15"],"import React, { useEffect, useState } from \"react\";\nimport { Spin, Pagination } from \"antd\";\nimport linkHeaderParser from \"parse-link-header\";\nimport RepoTable from \"./list\";\nimport { RepoDataType, RepoResponseData } from \"./types\";\nimport \"../../styles/repo-list.css\";\nimport api from \"../../services/api\";\n\nconst columns = [\n  {\n    title: \"Repo Name\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"Star Count\",\n    dataIndex: \"star\",\n  },\n  {\n    title: \"Fork Count\",\n    dataIndex: \"fork\",\n  },\n];\n\nconst RepoList: React.FC = (): React.ReactElement => {\n  const [isLoading, setIsLoading] = useState<true | false>(true);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [totalPageCount, setTotalPageCount] = useState(0);\n  const [repos, setRepoLists] = useState<RepoResponseData[] | null>(null);\n\n  const fetchRepo = async (page: number) => {\n    setIsLoading(true);\n    try {\n      const response: Response | null = await api(page);\n      setIsLoading(false);\n      if (response) {\n        const data: RepoResponseData[] = await response.json();\n        setRepoLists(data);\n        const { headers }: { headers: Headers } = response;\n        const link: string | null = headers.get(\"link\");\n        if (link) {\n          const paginationData: linkHeaderParser.Links | null = linkHeaderParser(\n            link\n          );\n          console.log(paginationData);\n          if (paginationData) {\n            setTotalPageCount(\n              Number(paginationData.last.page) *\n                Number(paginationData.last.per_page)\n            );\n          }\n        }\n      }\n    } catch (err) {\n      setRepoLists(null);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      fetchRepo(pageNumber);\n    })();\n  }, [pageNumber]);\n\n  const formatData = () => {\n    const data: RepoDataType[] = [];\n    if (repos) {\n      repos.forEach((repo) => {\n        // eslint-disable array-callback-return\n        data.push({\n          name: (\n            <a href={repo.html_url} target=\"_blank\" rel=\"noreferrer\">\n              {repo.name}\n            </a>\n          ),\n          star: repo.stargazers_count,\n          fork: repo.forks_count,\n          key: repo.id,\n        });\n      });\n    }\n\n    return data;\n  };\n  return (\n    <div className=\"repo-table-wrapper\">\n      {isLoading ? (\n        <Spin />\n      ) : (\n        <>\n          <RepoTable data={formatData()} columns={columns} />\n          <div className=\"pagination-wrapper\">\n            <Pagination\n              current={pageNumber}\n              total={totalPageCount}\n              showSizeChanger={false}\n              onChange={(page) => {\n                setPageNumber(page);\n                fetchRepo(page);\n              }}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default RepoList;\n","/Users/azeezraheem/Documents/workspace/projects/github-repo-viewer/src/services/config.ts",[],{"ruleId":"16","severity":1,"message":"17","line":44,"column":11,"nodeType":"18","messageId":"19","endLine":44,"endColumn":22},"no-console","Unexpected console statement.","MemberExpression","unexpected"]